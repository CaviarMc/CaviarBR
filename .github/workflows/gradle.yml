name: Build, Tests & Publish

on: [push, pull_request]

jobs:
  build:
    #strategy:
    #  matrix:
    #    os: [ubuntu-latest, windows-latest]
        #os: [ubuntu-latest, macos-latest, windows-latest]
    #runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
    - name: "Git clone"
      uses: actions/checkout@v2
# Install JDK
    - name: "Set up JDK 17"
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
# Install spigot repo
    - name: "Cache BuildTools"
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-buildtools-1.8.2
        restore-keys: |
          ${{ runner.os }}-buildtools-1.8.2
    - name: "Run BuildTools to git clone Spigot repo"
      uses: SpraxDev/Action-SpigotMC@v3
      with:
       # A comma-separated list of Spigot version that should be compiled
       # These values are later given to the BuildTools.jar as '--rev' argument
       #
       # Example: latest, 1.14.4, 1.8.8
       versions: 1.18.2 # Optional
   
       # Should sources be generated?
       # If enabled, BuildTools is provided the '--generate-source' argument
       generateSrc: false # Optional
   
       # Should the documentation be generated?
       # If enabled, BuildTools is provided the '--generate-docs' argument
       generateDoc: false # Optional
   
       # Should we disable the BuildTools's Java-Version-Check?
       # If enabled, BuildTools is provided the '--disable-java-check' argument
       disableJavaCheck: false # Optional
   
       # Disables the check for existing files in the local maven repository
       # Normally, a version is skipped if it is already installed
       # in the local maven repository to speed up build time
       forceRun: false # Optional
   
       # The amount of builds allowed to run at the same time
       # Set to '-1' to use system's cpu core count
       threads: -1 # Optional
   
       # You can choose between different BuildTools to be used by this action
       # ~~'SpraxDev' is my fork of SpigotMC's that introduces some changes (https://github.com/SpraxDev/Spigot-BuildTools/#breaking-changes)~~
       # My (SpraxDev) provider is causing some builds to fail depending on the build environment
       # Available: SpraxDev, SpigotMC
       buildToolProvider: SpigotMC # Optional

# Build Jar with gradle
    - name: "Cache Gradle"
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle*', 'gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: "Build with Gradle"
      id: gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build
        gradle-version: 7.4
    - name: "Get build-scan-url if build fail"
      if: failure()
      run: echo ‚ùå ${{ github.workflow }} failed ${{ steps.gradle.outputs.build-scan-url }}
      
    - name: "Upload JAR to other jobs"
      uses: actions/upload-artifact@v3
      with:
          if-no-files-found: error
          name: JAR
          path: build/*.jar

# Start plugin
  start:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: "Git clone"
      uses: actions/checkout@v2
    - name: "Download JAR from job build"
      uses: actions/download-artifact@v3
      with:
        name: JAR
        path: build/
    - name: "Set up JDK 17"
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: "Cache PaperSpigot Server"
      uses: actions/cache@v2
      with:
        path: test_server/
        key: ${{ runner.os }}-test_server-${{ hashFiles('testServer.sh', 'updatePaper.sh')}}
        restore-keys: |
          ${{ runner.os }}-test_server-
    - name: "Start PaperSpigot Server with plugin"
      run: ./testServer.sh
      shell: bash
      timeout-minutes: 5

# Push .jar to repo Release 
  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: "Git clone"
      uses: actions/checkout@v2
    - name: "Download JAR from job build"
      uses: actions/download-artifact@v3
      with:
        name: JAR
        path: build/
    - name: "Set up JDK 17"
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: "Get projet version in gradle"
#      uses: gradle/gradle-build-action@v2
      id: gradle_version
      run: ./gradlew -q printVersion
#      with:
#        arguments: -q printVersion
#        gradle-version: 7.4

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ steps.gradle_version.outputs.stdout }}
        #tag_name: 0.1-main
#        release_name: Development Build ${{ steps.gradle_version.outputs.stdout }}
#        draft: false
#        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/CaviarBR.jar
        asset_name: CaviarBR.jar
        asset_content_type: application/java-archive
